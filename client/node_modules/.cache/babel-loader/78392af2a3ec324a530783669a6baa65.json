{"ast":null,"code":"var _jsxFileName = \"/Users/vanessamartin/Desktop/coding_prac/react_prac/lotusarts/client/src/components/event-list/event-list.component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport EventItem from \"../event-item/event-item.component\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { getEvents } from '../../redux/events/events.actions';\nimport \"./event-list.styles.css\";\n\nclass Events extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getEvents = async () => {\n      const getEvents = this.props.getEvents;\n      const events = [];\n      let eventRefs = firestore.collection(\"events\");\n      await eventRefs.get().then(snapshot => {\n        // console.log(snapshot.docs);\n        snapshot.forEach(doc => {\n          // console.log(doc.id, \"=>\", doc.data());\n          events.push(doc.data());\n        });\n      }).catch(err => {\n        console.log(\"Error getting documents\");\n      });\n      getEvents(events);\n    };\n  }\n\n  componentDidMount() {\n    this.getEvents();\n  }\n\n  render() {\n    const events = this.props.events;\n    return React.createElement(\"div\", {\n      className: \"events-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Events\"), events.length ? React.createElement(\"div\", {\n      className: \"event-list-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, events.map((event, i) => React.createElement(EventItem, {\n      key: i,\n      event: event,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"No Events Available!\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  events: state.events.events\n});\n\nconst matchDispatchToProps = dispatch => ({\n  getEvents: events => dispatch(getEvents(events))\n});\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Events);","map":{"version":3,"sources":["/Users/vanessamartin/Desktop/coding_prac/react_prac/lotusarts/client/src/components/event-list/event-list.component.jsx"],"names":["React","Component","connect","EventItem","firestore","getEvents","Events","props","events","eventRefs","collection","get","then","snapshot","forEach","doc","push","data","catch","err","console","log","componentDidMount","render","length","map","event","i","mapStateToProps","state","matchDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAuB,aAAvB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,SAAT,QAAyB,mCAAzB;AAEA,OAAO,yBAAP;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAK7BI,SAL6B,GAKjB,YAAY;AAAA,YACdA,SADc,GACA,KAAKE,KADL,CACdF,SADc;AAEtB,YAAMG,MAAM,GAAG,EAAf;AACA,UAAIC,SAAS,GAAGL,SAAS,CAACM,UAAV,CAAqB,QAArB,CAAhB;AACA,YAAMD,SAAS,CACZE,GADG,GAEHC,IAFG,CAEEC,QAAQ,IAAI;AAChB;AACAA,QAAAA,QAAQ,CAACC,OAAT,CAAiBC,GAAG,IAAI;AACtB;AACAP,UAAAA,MAAM,CAACQ,IAAP,CAAYD,GAAG,CAACE,IAAJ,EAAZ;AACD,SAHD;AAID,OARG,EASHC,KATG,CASGC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,OAXG,CAAN;AAaAhB,MAAAA,SAAS,CAACG,MAAD,CAAT;AACD,KAvB4B;AAAA;;AAC7Bc,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,SAAL;AACD;;AAsBDkB,EAAAA,MAAM,GAAG;AAAA,UACCf,MADD,GACY,KAAKD,KADjB,CACCC,MADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGA,MAAM,CAACgB,MAAP,GACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,MAAM,CAACiB,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KACV,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,CAAhB;AAAmB,MAAA,KAAK,EAAED,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADD,GAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATJ,CADF;AAcD;;AAzC4B;;AA4C/B,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCrB,EAAAA,MAAM,EAAEqB,KAAK,CAACrB,MAAN,CAAaA;AADW,CAAL,CAA7B;;AAIA,MAAMsB,oBAAoB,GAAGC,QAAQ,KAAK;AACxC1B,EAAAA,SAAS,EAAEG,MAAM,IAAIuB,QAAQ,CAAC1B,SAAS,CAACG,MAAD,CAAV;AADW,CAAL,CAArC;;AAIA,eAAeN,OAAO,CAAC0B,eAAD,EAAkBE,oBAAlB,CAAP,CAA+CxB,MAA/C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {connect } from 'react-redux'\n\nimport EventItem from \"../event-item/event-item.component\";\n\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport  {getEvents} from '../../redux/events/events.actions'\n\nimport \"./event-list.styles.css\";\n\nclass Events extends Component {\n  componentDidMount() {\n    this.getEvents();\n  }\n\n  getEvents = async () => {\n    const { getEvents } = this.props\n    const events = [];\n    let eventRefs = firestore.collection(\"events\");\n    await eventRefs\n      .get()\n      .then(snapshot => {\n        // console.log(snapshot.docs);\n        snapshot.forEach(doc => {\n          // console.log(doc.id, \"=>\", doc.data());\n          events.push(doc.data());\n        });\n      })\n      .catch(err => {\n        console.log(\"Error getting documents\");\n      });\n\n    getEvents(events);\n  };\n\n  render() {\n    const { events } = this.props;\n    return (\n      <div className=\"events-container\">\n        <h1>Events</h1>\n        {events.length ? (\n          <div className=\"event-list-grid\">\n            {events.map((event, i) => (\n              <EventItem key={i} event={event} />\n            ))}\n          </div>\n        ) : (\n          <h1>No Events Available!</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  events: state.events.events\n})\n\nconst matchDispatchToProps = dispatch => ({\n  getEvents: events => dispatch(getEvents(events))\n})\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Events);\n"]},"metadata":{},"sourceType":"module"}