{"ast":null,"code":"var _jsxFileName = \"/Users/vanessamartin/Desktop/coding_prac/react_prac/lotusarts/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from \"react\";\nimport axios from 'axios';\nimport StripeCheckout from \"react-stripe-checkout\";\nimport * as emailjs from \"emailjs-com\";\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const priceForStripe = price * 100; // change before going live\n\n  const publishableKey = \"pk_test_TD3bJFY6vKMBXowUkCZphnfe\";\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    }).then(response => {\n      alert('Sucessful payment');\n      console.log(\"RESPONSE.DATA.SUCCESS: \", response.data.success);\n      const _response$data$sucess = response.data.sucess,\n            receipt_email = _response$data$sucess.receipt_email,\n            receipt_url = _response$data$sucess.receipt_url,\n            order = _response$data$sucess.order;\n      const _response$data$sucess2 = response.data.sucess.billing_details,\n            name = _response$data$sucess2.name,\n            address = _response$data$sucess2.address;\n      emailSubmit({\n        receipt_email,\n        receipt_url,\n        name,\n        address\n      });\n    }).catch(error => {\n      console.log('Payment Error: ', error);\n      alert('There was an issue with your payment! Please make sure you use the provided credit card.');\n    });\n  };\n\n  const emailSubmit = emailData => {\n    const receipt_email = emailData.receipt_email,\n          receipt_url = emailData.receipt_url,\n          name = emailData.name,\n          address = emailData.address,\n          order = emailData.order;\n    const messageUpdated = `\n     ${name} bought a product! \n     Address -  ${address}\n     order - ${order}\n  `;\n    const templateParams = {\n      from_name: receipt_email,\n      to_name: \"l0tusart007@gmail.com\",\n      subject: \"PRODUCT PURCHASED - Lotus Art\",\n      message_html: messageUpdated\n    };\n    emailjs.send(\"gmail\", \"template_mgKZRCOz\", templateParams, \"user_ZGzQ6szqqXtsDwYcf6Edg\").then(response => {\n      alert(\"Artist has been informed of your purchase\");\n    }).catch(error => {\n      console.log(\"Message Error: \", error);\n      alert(\"There was an issue with your order! Please try again.\");\n    });\n  };\n\n  return React.createElement(StripeCheckout, {\n    name: \"Lotus Art\",\n    label: \"Pay Now\",\n    currency: \"USD\",\n    image: \"https://svgshare.com/i/CUz.svg\",\n    panelLabel: \"Pay Now\",\n    amount: priceForStripe,\n    description: `Your total is $${price}`,\n    shippingAddress: true,\n    billingAddress: true,\n    zipCode: true,\n    allowRememberMe: true,\n    token: onToken,\n    stripeKey: publishableKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  });\n};\n\nexport default StripeCheckoutButton;","map":{"version":3,"sources":["/Users/vanessamartin/Desktop/coding_prac/react_prac/lotusarts/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","axios","StripeCheckout","emailjs","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","response","alert","console","log","success","sucess","receipt_email","receipt_url","order","billing_details","name","address","emailSubmit","catch","error","emailData","messageUpdated","templateParams","from_name","to_name","subject","message_html","send"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport StripeCheckout from \"react-stripe-checkout\";\nimport * as emailjs from \"emailjs-com\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  // change before going live\n  const publishableKey = \"pk_test_TD3bJFY6vKMBXowUkCZphnfe\";\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    }).then(response => {\n      alert('Sucessful payment')\n      console.log(\"RESPONSE.DATA.SUCCESS: \", response.data.success)\n      const { \n      receipt_email,\n      receipt_url,\n      order } = response.data.sucess\n      const { name, address } = response.data.sucess.billing_details\n      emailSubmit({receipt_email, receipt_url, name, address})\n    })\n    .catch(error => {\n      console.log('Payment Error: ', error)\n      alert('There was an issue with your payment! Please make sure you use the provided credit card.')\n    })\n  };\n\n    const emailSubmit = (emailData) => {\n    const { receipt_email, receipt_url, name, address, order } = emailData\n    const messageUpdated = `\n     ${name} bought a product! \n     Address -  ${address}\n     order - ${order}\n  `\n  ;\n\n    const templateParams = {\n      from_name: receipt_email,\n      to_name: \"l0tusart007@gmail.com\",\n      subject: \"PRODUCT PURCHASED - Lotus Art\",\n      message_html: messageUpdated\n    };\n\n    emailjs\n      .send(\n        \"gmail\",\n        \"template_mgKZRCOz\",\n        templateParams,\n        \"user_ZGzQ6szqqXtsDwYcf6Edg\"\n      )\n      .then(response => {\n        alert(\"Artist has been informed of your purchase\");\n      })\n      .catch(error => {\n        console.log(\"Message Error: \", error);\n        alert(\"There was an issue with your order! Please try again.\");\n      });\n  }\n\n  return (\n    <StripeCheckout\n      name=\"Lotus Art\"\n      label=\"Pay Now\"\n      currency=\"USD\"\n      image=\"https://svgshare.com/i/CUz.svg\"\n      panelLabel=\"Pay Now\"\n      amount={priceForStripe}\n      description={`Your total is $${price}`}\n      shippingAddress\n      billingAddress\n      zipCode\n      allowRememberMe\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default StripeCheckoutButton;\n"]},"metadata":{},"sourceType":"module"}